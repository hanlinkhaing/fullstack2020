{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/PersonService.js","components/Message.js","App.js","serviceWorker.js","index.js"],"names":["Filter","value","handler","onChange","Persons","persons","deleteHandler","confirm","person","window","name","id","map","key","number","onClick","PersonForm","changeName","changeNumber","addPerson","onSubmit","newName","newNumber","type","axios","get","then","res","data","post","catch","err","Error","response","error","delete","put","success","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Message","message","style","isError","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","setMessage","useEffect","personService","filtedList","toLowerCase","includes","addMessage","obj","setTimeout","event","target","preventDefault","find","p","concat","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.378d4e00.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ value, handler }) => (\r\n  <div>\r\n    filter shown with <input value={value} onChange={handler} />\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ persons, deleteHandler }) => {\r\n\r\n  const confirm = (person) => () => {\r\n    if (window.confirm(`Delete ${person.name}?`)) deleteHandler(person.id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {persons.map((person) => (\r\n        <p key={person.name}>\r\n          {`${person.name} ${person.number}`} <button onClick={confirm(person)}>delete</button>\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({ name, changeName, number, changeNumber, addPerson }) => (\r\n  <form onSubmit={addPerson}>\r\n    <div>\r\n      name: <input value={name.newName} onChange={changeName} />\r\n    </div>\r\n    <div>\r\n      number: <input value={number.newNumber} onChange={changeNumber} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default PersonForm;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = \"api/persons\";\r\n\r\nconst getAll = () => {\r\n    return axios.get(BASE_URL).then(res => res.data);\r\n}\r\n\r\nconst create = (person) => {\r\n    return axios.post(BASE_URL, person).then(res => res.data).catch(err => new Error(err.response.data.error));\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${BASE_URL}/${id}`).then(res => res.data).catch(err => new Error(err.response.data.error));\r\n}\r\n\r\nconst update = (id, person) => {\r\n    return axios.put(`${BASE_URL}/${id}`, person).then(res => res.data).catch(err => new Error(err.response.data.error));\r\n}\r\n\r\nexport default { getAll, create, deletePerson, update }","import React from \"react\";\r\n\r\nconst success = {\r\n  color: \"green\",\r\n  background: \"lightgrey\",\r\n  fontSize: 20,\r\n  borderStyle: \"solid\",\r\n  borderRadius: 5,\r\n  padding: 5,\r\n  marginBottom: 10,\r\n};\r\n\r\nconst error = {\r\n    color: \"red\",\r\n    background: \"lightgrey\",\r\n    fontSize: 20,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    marginBottom: 10,\r\n  };\r\nconst Message = ({ message }) => (\r\n  <div>\r\n    { message.message ? (<p style={message.isError? error: success}>{message.message}</p>): <></>}\r\n  </div>\r\n);\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/PersonService\";\nimport Message from \"./components/Message\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState({\n    isError: false,\n    message: null,\n  });\n\n  const hook = () => {\n    personService.getAll().then((data) => {\n      setPersons(data);\n    });\n  };\n\n  useEffect(hook, []);\n\n  const changeNewName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const changeNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const person = persons.find((person) => person.name === newName);\n    if (person)\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        personService\n          .update(person.id, { ...person, number: newNumber })\n          .then((data) => {\n            if (data instanceof Error) {\n              addMessage({ isError: true, message: `${data.message}` });\n            } else {\n              setPersons(persons.map((p) => (person.id === p.id ? data : p)));\n              addMessage({\n                isError: false,\n                message: `Updated ${data.name} with ${data.number}`,\n              });\n            }\n          });\n      } else return;\n    else {\n      personService\n        .create({ name: newName, number: newNumber })\n        .then((data) => {\n          if (data instanceof Error) {\n            addMessage({ isError: true, message: `${data.message}` });\n          } else {\n            setPersons(persons.concat(data));\n            addMessage({ ...message, message: `Added ${data.name}` });\n          }\n        });\n    }\n  };\n\n  const filterName = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const filtedList = filter\n    ? persons.filter((person) =>\n        person.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : persons;\n\n  const deleteHandler = (id) => {\n    personService.deletePerson(id).then((data) => {\n      if (data instanceof Error) {\n        addMessage({ isError: true, message: `${data.message}` });\n      } else {\n        setPersons(persons.filter((person) => person.id !== id));\n        addMessage({ isError: false, message: `Successfully Deleted` });\n      }\n    });\n  };\n\n  const addMessage = (obj) => {\n    setMessage(obj);\n    setTimeout(() => setMessage({ isError: false, message: null }), 5000);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message={message} />\n      <Filter value={filter} handler={filterName} />\n      <h2>add a new</h2>\n      <PersonForm\n        name={newName}\n        changeName={changeNewName}\n        number={newNumber}\n        changeNumber={changeNewNumber}\n        addPerson={addPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={filtedList} deleteHandler={deleteHandler} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}